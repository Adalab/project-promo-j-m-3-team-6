{"version":3,"sources":["01.photo.js","02.palette.js","03.form.js","04.collapsible.js","05.reset.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["'use strict';\r\n\r\nconst fr = new FileReader();\r\nconst uploadBtn = document.querySelector('.js__profile-trigger');\r\nconst fileField = document.querySelector('.js__profile-upload-btn');\r\nconst profileImage = document.querySelector('.js__profile-image');\r\nconst profilePreview = document.querySelector('.js__profile-preview');\r\n\r\n/**\r\n * Recoge el archivo añadido al campo de tipo \"file\"\r\n * y lo carga en nuestro objeto FileReader para que\r\n * lo convierta a algo con lo que podamos trabajar.\r\n * Añade un listener al FR para que ejecute una función\r\n * al tener los datos listos\r\n * @param {evento} e\r\n */\r\nfunction getImage(e) {\r\n  const myFile = e.currentTarget.files[0];\r\n  fr.addEventListener('load', writeImage);\r\n  fr.readAsDataURL(myFile);\r\n}\r\n\r\n/**\r\n * Una vez tenemos los datos listos en el FR podemos\r\n * trabajar con ellos ;)\r\n */\r\nfunction writeImage() {\r\n  /* En la propiedad `result` de nuestro FR se almacena\r\n   * el resultado. Ese resultado de procesar el fichero que hemos cargado\r\n   * podemos pasarlo como background a la imagen de perfil y a la vista previa\r\n   * de nuestro componente.\r\n   */\r\n  setPhoto(fr.result);\r\n}\r\n\r\n/**\r\n * Genera un click automático en nuesto campo de tipo \"file\"\r\n * que está oculto\r\n */\r\nfunction fakeFileClick() {\r\n  fileField.click();\r\n}\r\n\r\n/**\r\n * Añadimos los listeners necesarios:\r\n * - al botón visible para generar el click automático\r\n * - al campo oculto para cuando cambie su value\r\n */\r\nuploadBtn.addEventListener('click', fakeFileClick);\r\nfileField.addEventListener('change', getImage);\r\n","'use strict';\n\n//FORMULARIO\n//Check Paleta de colores\nconst paletteStyle = document.querySelector('.preview__card');\nconst palettes = document.querySelectorAll('.js-check');\npalettes[0].checked = true;\n\nfunction changePalette(ev) {\n  paletteStyle.classList.remove('palette1', 'palette2', 'palette3');\n  if (ev.currenTarget === palettes[0]) {\n    paletteStyle.classList.add('palette1');\n  } else if (ev.currentTarget === palettes[1]) {\n    paletteStyle.classList.add('palette2');\n  } else if (ev.currentTarget === palettes[2]) {\n    paletteStyle.classList.add('palette3');\n  }\n  addPaletteObject(ev);\n}\nfunction addPaletteObject(ev) {\n  const name = ev.currentTarget.name;\n  const inputValue = ev.currentTarget.value;\n\n  formData[name] = inputValue;\n  localStorage.setItem('userInfo', JSON.stringify(formData));\n}\n\nfor (const palette of palettes) {\n  palette.addEventListener('change', changePalette);\n  palette.addEventListener('click', addPaletteObject);\n}\n","'use strict';\n\n/*--------------------Datos Formulario--------------- */\n\n//Objeto para crear los datos del formulario\nlet formData = {\n  photo: '',\n};\n\n//Objeto que tiene todas las clases de la card para poder pintarlas\nconst cardFields = {\n  palette: document.querySelector('.js-check:checked').value,\n  name: document.querySelector('.js-text-name'),\n  job: document.querySelector('.js-text-job'),\n  email: document.querySelector('.js-mail'),\n  phone: document.querySelector('.js-number'),\n  linkedin: document.querySelector('.js-linkedin'),\n  github: document.querySelector('.js-github'),\n};\n\nconsole.log(cardFields);\n//Variables con input del form\nconst inputName = document.querySelector('.js-input-name');\nconst inputJob = document.querySelector('.js-input-job');\nconst inputEmail = document.querySelector('.js-input-mail');\nconst inputPhone = document.querySelector('.js-input-phone');\nconst inputLinkedin = document.querySelector('.js-input-linkedin');\nconst inputGithub = document.querySelector('.js-input-github');\nconst formButton = document.querySelector('.js-share'); //Variable boton del form\n// const imgButton = document.querySelector('.js__profile-trigger'); //Variable boton del form\nconst textShare = document.querySelector('.js-textShare'); //Variable del texto oculto de compartir\n\n//Funcion que guarda los datos en el objeto y lo pinta en la tarjeta el texto\nfunction setData(ev) {\n  const name = ev.currentTarget.name;\n  const inputValue = ev.currentTarget.value;\n  formData[name] = inputValue;\n  updateCard();\n}\n\nfunction updateCardText(name, placeholder) {\n  cardFields[name].innerHTML = formData[name] || placeholder;\n}\n\n//Funcion que guarda los datos en el objeto\nfunction setLinks(ev) {\n  const name = ev.currentTarget.name;\n  const inputValue = ev.currentTarget.value;\n  formData[name] = inputValue;\n  updateCard();\n}\n\n//Funcion que imprime los datos en la tarjeta\nfunction updateCardLinks(name, prefix) {\n  cardFields[name].href = prefix + formData[name];\n}\n\n//Funcion que actualiza los datos de la tarjeta\nfunction updateCard() {\n  updateCardText('name', 'Nombre Apellido');\n  updateCardText('job', 'Front-end developer');\n  updateCardLinks('email', 'mailto:');\n  updateCardLinks('phone', 'tel:');\n  updateCardLinks('linkedin', 'https://linkedin.com/in/');\n  updateCardLinks('github', 'https://github.com/');\n  if (formData.photo !== '') {\n    updateCardPhoto();\n  } else {\n    profileImage.style.backgroundImage = `url(./assets/images/Logo-Gryffincode.png)`;\n  }\n}\n\n//Funcion que guarda los datos de la imagen en el objeto\nfunction setPhoto(photo) {\n  formData.photo = photo;\n  localStorage.setItem('userInfo', JSON.stringify(formData));\n  updateCard();\n}\n\n//funcion que imprime la imagen en la tarjeta y preview\nfunction updateCardPhoto() {\n  profileImage.style.backgroundImage = `url(${formData.photo})`;\n  profilePreview.style.backgroundImage = `url(${formData.photo})`;\n}\n\n//Funcion que valida los datos\nfunction validation(ev) {\n  ev.preventDefault();\n\n  if (\n    inputName.value.length > 1 &&\n    inputJob.value.length > 1 &&\n    inputEmail.value.length > 1 &&\n    inputPhone.value.length > 1 &&\n    inputLinkedin.value.length > 1 &&\n    inputGithub.value.length > 1\n  ) {\n    textShare.classList.remove('hidden');\n    formButton.classList.add('disabled');\n    formButton.classList.remove('share__content__button');\n    // imgButton.classList.add('img-disabled');\n    // imgButton.classList.remove('action__upload-btn');\n  } else {\n    alert('No has introducido ningún dato');\n  }\n\n  sendRequest(formData);\n}\n\n//------------------PETICION AL SERVIDOR - FETCH---------------------\nconst linkShare = document.querySelector('.js-linkShare');\nconst twitterURL = document.querySelector('.js-twitter');\n\nfunction sendRequest(formData) {\n  fetch('https://us-central1-awesome-cards-cf6f0.cloudfunctions.net/card/', {\n    method: 'POST',\n    body: JSON.stringify(formData),\n    headers: {\n      'content-type': 'application/json',\n    },\n  })\n    .then(function (resp) {\n      return resp.json();\n    })\n    .then(function (result) {\n      showURL(result);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nfunction showURL(result) {\n  if (result.success) {\n    linkShare.innerHTML =\n      '<a target=\"_blank\" href=' +\n      result.cardURL +\n      '>' +\n      result.cardURL +\n      '</a>';\n    const tweet = 'Esta es nuestra Gryffincode Awesome Profile Cards';\n    twitterURL.setAttribute(\n      'href',\n      `http://twitter.com/share?text=${tweet}&hashtags=adalaber,promoJemison,profileCards&user_mentions=Adalab_Digital&url=${result.cardURL}`\n    );\n  } else {\n    linkShare.innerHTML = 'ERROR:' + result.error;\n  }\n}\n\n//---------------------LOCAL STORAGE--------------------------------------\n\n//Guardamos los datos en el localStorage\ndocument.addEventListener('keyup', function () {\n  localStorage.setItem('userInfo', JSON.stringify(formData));\n});\n\n//recuperar datos al refrescar\nconst savedInfo = JSON.parse(localStorage.getItem('userInfo'));\nfunction uploadInfo() {\n  if (savedInfo !== null) {\n    formData.name = savedInfo.name;\n    inputName.value = savedInfo.name || '';\n    formData.job = savedInfo.job;\n    inputJob.value = savedInfo.job || '';\n    formData.email = savedInfo.email;\n    inputEmail.value = savedInfo.email || '';\n    formData.phone = savedInfo.phone;\n    inputPhone.value = savedInfo.phone || '';\n    formData.linkedin = savedInfo.linkedin;\n    inputLinkedin.value = savedInfo.linkedin || '';\n    formData.github = savedInfo.github;\n    inputGithub.value = savedInfo.github || '';\n    formData.photo = savedInfo.photo;\n    profileImage.style.backgroundImage =\n      `url(${savedInfo.photo})` || `url(./assets/images/Logo-Gryffincode.png)`;\n    profilePreview.style.backgroundImage = `url(${savedInfo.photo})`;\n\n    if (savedInfo.palette) {\n      document.querySelector(\n        '.js-check#color' + savedInfo.palette\n      ).checked = true;\n      paletteStyle.classList.add(`palette${savedInfo.palette}`);\n    }\n    updateCard();\n  }\n}\nuploadInfo();\n\n//------------------------------------------------\n\n//Listeners\ninputName.addEventListener('keyup', setData);\ninputJob.addEventListener('keyup', setData);\ninputEmail.addEventListener('keyup', setLinks);\ninputPhone.addEventListener('keyup', setLinks);\ninputLinkedin.addEventListener('keyup', setLinks);\ninputGithub.addEventListener('keyup', setLinks);\nformButton.addEventListener('click', validation);\n\n","'use strict';\n\n// COLLAPSIBLE SECTIONS\nconst arrowTransform1 = document.querySelector('.js-arrowTransform1');\nconst arrowTransform2 = document.querySelector('.js-arrowTransform2');\nconst arrowTransform3 = document.querySelector('.js-arrowTransform3');\nconst arrow1 = document.querySelector('.js-arrow1');\nconst arrow2 = document.querySelector('.js-arrow2');\nconst arrow3 = document.querySelector('.js-arrow3');\nconst collapsible = document.querySelector('.js-collapsed');\nconst collapsibleHidden1 = document.querySelector('.js-hidden1');\nconst collapsibleHidden2 = document.querySelector('.js-hidden2');\nconst collapsibleHidden3 = document.querySelector('.js-hidden3');\n\n\nfunction changeCollapsible1() {\n  collapsibleHidden1.classList.toggle('hidden');\n  arrowTransform1.classList.toggle('transform');\n}\nfunction changeCollapsible2() {\n  collapsibleHidden2.classList.toggle('hidden');\n  arrowTransform2.classList.toggle('transform');\n}\nfunction changeCollapsible3() {\n  collapsibleHidden3.classList.toggle('hidden');\n  arrowTransform3.classList.toggle('transform');\n}\n\narrow1.addEventListener('click', changeCollapsible1);\narrow2.addEventListener('click', changeCollapsible2);\narrow3.addEventListener('click', changeCollapsible3);\n","/* eslint-disable no-undef */\n'use strict';\n\n//-------------------RESET------------------------\n// get resetElement dom element\nconst resetElement = document.querySelector('.js-reset');\n\n// clear all inputs\nfunction reset(ev) {\n  ev.preventDefault();\n  localStorage.removeItem('userInfo');\n  formData = {\n    photo: '',\n  };\n  inputName.value = '';\n  cardFields.name.innerHTML = 'Nombre Apellido';\n  inputJob.value = '';\n  cardFields.job.innerHTML = 'Front-end developer';\n  inputEmail.value = '';\n  cardFields.email.href = 'mailto:';\n  inputPhone.value = '';\n  cardFields.phone.href = 'tel:';\n  inputLinkedin.value = '';\n  cardFields.linkedin.href = 'https://linkedin.com/in/';\n  inputGithub.value = '';\n  cardFields.github.href = 'https://github.com/';\n  profileImage.style.backgroundImage = `url(./assets/images/Logo-Gryffincode.png)`;\n  profilePreview.style.backgroundImage = ``;\n\n  palettes[0].checked = true;\n  paletteStyle.classList.add('palette1');\n  paletteStyle.classList.remove('palette2', 'palette3');\n}\n\n// listen click in reset button\nresetElement.addEventListener('click', reset);\n"]}